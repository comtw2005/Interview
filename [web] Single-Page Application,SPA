


Single-Page Application, SPA 

網頁應用的架構，在 SPA 中，整個應用程式的所有內容都在一個頁面中呈現。

如同Gmail，可以在同一個頁面回覆或是編輯信件，而不用刷新整個頁面，使用者只須要刷新需要看到的功能就好，應用程式只需要動態仔入和顯示所需要的新數據，而不是加載整個新頁面。

SPA 優點

1. 更好的用戶體驗：
  
   SPA 提供了一個更流暢，更快速的網頁體驗，不需要為每個請求重新加載整個頁面。這可以讓網站看起來更像一個原生的 APP，進而提升使用者體驗。

2. 前後端分離：

    在 SPA 中，前端主要負責頁面渲染和互動，後端負責提供數據和 API。如果不使用 SPA 架構，那麼將會使用傳統的多頁面架構，當使用者請求新頁面時，後端會回傳完整的頁面。因此 SPA 這種分離可以使得前端和後端的開發和維護更加獨立，也可以提高網站的效率和可靠性。


SPA 缺點

1. SEO 較差：

    因為 SPA 只有一個頁面，其他資料都是透過 JavaScript 動態渲染，因此搜索引擎的爬蟲無法正確的索引頁面內容，進而影響了網站的排名。

2. JavaScript 檔案過大：

    SPA 會需要透過前端大量的 JavaScript 來提供使用者互動或加載資料，此外隨著 SPA 應用程式變得越來越複雜，其所需的 JavaScript 檔案也會隨之增大，這些原因可能會造成 SPA 加載 JavaScript 檔案時變得緩慢。

SPA 缺點解決方式

可以使用 SSR (Server-side Rendering) 或是 SSR (Server-side Rendering) + CSR (Client-side Rendering) 的方式。

SSR 可以在伺服器上完整渲染 HTML 頁面，並將其發送給使用者，使搜索引擎可以正確索引頁面內容，從而提高網站排名。而 SSR + CSR 的搭配，則可以在第一次將伺服器生成的靜態 HTML 發送到客戶端，提供更好的 SEO 和更快的頁面加載速度，同時還提供了預先渲染的頁面。當後面的畫面需要更多的互動與交互時，可以使用 CSR 來達到此目的。

其次，讓我們來看一下 SPA JavaScript 檔案過大的問題。為了解決這個問題，我們可以使用懶加載 (lazy loading)、代碼分割 (code splitting)、壓縮等技術，減少 JavaScript 檔案的大小，或是只在需要時加載特定 JavaScript 檔案，這樣可以減少檔案大小，並提高頁面加載速度。

以上就是解決 SPA 缺點的一些常見方法。當然，這些方法只是其中的一部分，根據具體情況，可能還有其他更好的解決方案。在面試中，我們需要能夠靈活運用這些知識，結合實際情況，提出更加有效的解決方案。


ref: https://www.explainthis.io/zh-hant/swe/spa
